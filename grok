
-- CoolField UI Library
-- A modern, animated UI library for Roblox with Rayfield-like features
-- Created for sleek design, modularity, and extensibility

-- Services
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local HttpService = game:GetService("HttpService")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local CoreGui = game:GetService("CoreGui")

-- Library Setup
local CoolField = {}
CoolField.__index = CoolField

-- Themes
local Themes = {
    Default = {
        Background = Color3.fromRGB(30, 30, 30),
        ElementBackground = Color3.fromRGB(40, 40, 40),
        TextColor = Color3.fromRGB(255, 255, 255),
        Accent = Color3.fromRGB(0, 170, 255),
        Stroke = Color3.fromRGB(80, 80, 80),
        ToggleEnabled = Color3.fromRGB(0, 255, 100),
        ToggleDisabled = Color3.fromRGB(255, 50, 50),
    },
    Dark = {
        Background = Color3.fromRGB(20, 20, 20),
        ElementBackground = Color3.fromRGB(30, 30, 30),
        TextColor = Color3.fromRGB(200, 200, 200),
        Accent = Color3.fromRGB(100, 100, 255),
        Stroke = Color3.fromRGB(60, 60, 60),
        ToggleEnabled = Color3.fromRGB(50, 200, 100),
        ToggleDisabled = Color3.fromRGB(200, 50, 50),
    }
}

-- Utility Functions
local function createTween(instance, properties, duration, easingStyle, easingDirection)
    local tweenInfo = TweenInfo.new(duration, easingStyle or Enum.EasingStyle.Quint, easingDirection or Enum.EasingDirection.Out)
    local tween = TweenService:Create(instance, tweenInfo, properties)
    tween:Play()
    return tween
end

-- Main UI Setup
function CoolField:CreateWindow(config)
    local window = {}
    setmetatable(window, CoolField)
    
    -- Configuration Defaults
    window.Config = {
        Name = config.Name or "CoolField Window",
        LoadingTitle = config.LoadingTitle or "CoolField Interface",
        LoadingSubtitle = config.LoadingSubtitle or "by Dev",
        Theme = config.Theme or "Default",
        Icon = config.Icon or 0, -- Lucide icon name or Roblox Image ID
        ConfigurationSaving = config.ConfigurationSaving or { Enabled = false, FolderName = nil, FileName = "CoolField" },
        Discord = config.Discord or { Enabled = false, Invite = "", RememberJoins = true },
        KeySystem = config.KeySystem or false,
        KeySettings = config.KeySettings or { Title = "Key System", Subtitle = "Enter Key", Note = "No key provided", FileName = "CoolFieldKey", SaveKey = true, GrabKeyFromSite = false, Key = {"default"} },
        Monetization = config.Monetization or { Enabled = false, SubscriptionPrompt = false, OneTimePurchase = false }
    }
    
    -- Analytics
    window.Analytics = {
        ElementUsage = {},
        Executor = game:GetService("RbxAnalyticsService"):GetClientId(),
        ActiveUsers = 0
    }
    
    -- UI Setup
    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Name = "CoolField"
    ScreenGui.DisplayOrder = 100
    ScreenGui.IgnoreGuiInset = true
    ScreenGui.Parent = CoreGui
    
    local Main = Instance.new("Frame")
    Main.Size = UDim2.new(0, 600, 0, 400)
    Main.Position = UDim2.new(0.5, -300, 0.5, -200)
    Main.BackgroundColor3 = Themes[window.Config.Theme].Background
    Main.BackgroundTransparency = 1
    Main.ClipsDescendants = true
    Main.Parent = ScreenGui
    
    local UICorner = Instance.new("UICorner")
    UICorner.CornerRadius = UDim.new(0, 8)
    UICorner.Parent = Main
    
    local Topbar = Instance.new("Frame")
    Topbar.Size = UDim2.new(1, 0, 0, 40)
    Topbar.BackgroundColor3 = Themes[window.Config.Theme].ElementBackground
    Topbar.Parent = Main
    
    local Title = Instance.new("TextLabel")
    Title.Size = UDim2.new(0, 200, 1, 0)
    Title.Position = UDim2.new(0, 10, 0, 0)
    Title.BackgroundTransparency = 1
    Title.Text = window.Config.Name
    Title.TextColor3 = Themes[window.Config.Theme].TextColor
    Title.TextSize = 16
    Title.Font = Enum.Font.SourceSansBold
    Title.TextXAlignment = Enum.TextXAlignment.Left
    Title.Parent = Topbar
    
    local Elements = Instance.new("Frame")
    Elements.Size = UDim2.new(1, -150, 1, -40)
    Elements.Position = UDim2.new(0, 150, 0, 40)
    Elements.BackgroundTransparency = 1
    Elements.Parent = Main
    
    local TabList = Instance.new("Frame")
    TabList.Size = UDim2.new(0, 150, 1, -40)
    TabList.Position = UDim2.new(0, 0, 0, 40)
    TabList.BackgroundColor3 = Themes[window.Config.Theme].ElementBackground
    TabList.Parent = Main
    
    local TabListLayout = Instance.new("UIListLayout")
    TabListLayout.SortOrder = Enum.SortOrder.LayoutOrder
    TabListLayout.Padding = UDim.new(0, 5)
    TabListLayout.Parent = TabList
    
    local PageLayout = Instance.new("UIPageLayout")
    PageLayout.Animated = true
    PageLayout.EasingStyle = Enum.EasingStyle.Quint
    PageLayout.TweenTime = 0.3
    PageLayout.Parent = Elements
    
    -- Loading Frame
    local LoadingFrame = Instance.new("Frame")
    LoadingFrame.Size = UDim2.new(1, 0, 1, 0)
    LoadingFrame.BackgroundColor3 = Themes[window.Config.Theme].Background
    LoadingFrame.BackgroundTransparency = 1
    LoadingFrame.Parent = Main
    
    local LoadingTitle = Instance.new("TextLabel")
    LoadingTitle.Size = UDim2.new(0, 300, 0, 50)
    LoadingTitle.Position = UDim2.new(0.5, -150, 0.4, -25)
    LoadingTitle.BackgroundTransparency = 1
    LoadingTitle.Text = window.Config.LoadingTitle
    LoadingTitle.TextColor3 = Themes[window.Config.Theme].TextColor
    LoadingTitle.TextSize = 24
    LoadingTitle.Font = Enum.Font.SourceSansBold
    LoadingTitle.TextTransparency = 1
    LoadingTitle.Parent = LoadingFrame
    
    local LoadingSubtitle = Instance.new("TextLabel")
    LoadingSubtitle.Size = UDim2.new(0, 300, 0, 30)
    LoadingSubtitle.Position = UDim2.new(0.5, -150, 0.5, -15)
    LoadingSubtitle.BackgroundTransparency = 1
    LoadingSubtitle.Text = window.Config.LoadingSubtitle
    LoadingSubtitle.TextColor3 = Themes[window.Config.Theme].TextColor
    LoadingSubtitle.TextSize = 16
    LoadingSubtitle.Font = Enum.Font.SourceSans
    LoadingSubtitle.TextTransparency = 1
    LoadingSubtitle.Parent = LoadingFrame
    
    -- Key System
    if window.Config.KeySystem then
        local KeyFrame = Instance.new("Frame")
        KeyFrame.Size = UDim2.new(0, 300, 0, 200)
        KeyFrame.Position = UDim2.new(0.5, -150, 0.5, -100)
        KeyFrame.BackgroundColor3 = Themes[window.Config.Theme].ElementBackground
        KeyFrame.Parent = Main
        
        local KeyInput = Instance.new("TextBox")
        KeyInput.Size = UDim2.new(0, 200, 0, 30)
        KeyInput.Position = UDim2.new(0.5, -100, 0.6, -15)
        KeyInput.BackgroundColor3 = Themes[window.Config.Theme].ElementBackground
        KeyInput.TextColor3 = Themes[window.Config.Theme].TextColor
        KeyInput.TextSize = 14
        KeyInput.PlaceholderText = "Enter Key"
        KeyInput.Parent = KeyFrame
        
        local SubmitButton = Instance.new("TextButton")
        SubmitButton.Size = UDim2.new(0, 100, 0, 30)
        SubmitButton.Position = UDim2.new(0.5, -50, 0.8, -15)
        SubmitButton.BackgroundColor3 = Themes[window.Config.Theme].Accent
        SubmitButton.TextColor3 = Themes[window.Config.Theme].TextColor
        SubmitButton.Text = "Submit"
        SubmitButton.TextSize = 14
        SubmitButton.Parent = KeyFrame
        
        SubmitButton.MouseButton1Click:Connect(function()
            local key = KeyInput.Text
            if table.find(window.Config.KeySettings.Key, key) then
                KeyFrame.Visible = false
                Main.BackgroundTransparency = 0
                createTween(LoadingFrame, {BackgroundTransparency = 1}, 0.5)
                createTween(LoadingTitle, {TextTransparency = 1}, 0.5)
                createTween(LoadingSubtitle, {TextTransparency = 1}, 0.5)
                createTween(Main, {BackgroundTransparency = 0}, 0.5)
            else
                window:Notify("Invalid Key", "Please enter a valid key.", 5)
            end
        end)
    else
        createTween(LoadingFrame, {BackgroundTransparency = 1}, 0.5)
        createTween(LoadingTitle, {TextTransparency = 1}, 0.5)
        createTween(LoadingSubtitle, {TextTransparency = 1}, 0.5)
        createTween(Main, {BackgroundTransparency = 0}, 0.5)
    end
    
    -- Notification System
    function window:Notify(title, content, duration)
        local Notification = Instance.new("Frame")
        Notification.Size = UDim2.new(0, 300, 0, 100)
        Notification.Position = UDim2.new(1, -310, 1, -110)
        Notification.BackgroundColor3 = Themes[window.Config.Theme].ElementBackground
        Notification.Parent = ScreenGui
        
        local NotifyTitle = Instance.new("TextLabel")
        NotifyTitle.Size = UDim2.new(1, -20, 0, 30)
        NotifyTitle.Position = UDim2.new(0, 10, 0, 10)
        NotifyTitle.BackgroundTransparency = 1
        NotifyTitle.Text = title
        NotifyTitle.TextColor3 = Themes[window.Config.Theme].TextColor
        NotifyTitle.TextSize = 16
        NotifyTitle.Font = Enum.Font.SourceSansBold
        NotifyTitle.TextXAlignment = Enum.TextXAlignment.Left
        NotifyTitle.Parent = Notification
        
        local NotifyContent = Instance.new("TextLabel")
        NotifyContent.Size = UDim2.new(1, -20, 0, 50)
        NotifyContent.Position = UDim2.new(0, 10, 0, 40)
        NotifyContent.BackgroundTransparency = 1
        NotifyContent.Text = content
        NotifyContent.TextColor3 = Themes[window.Config.Theme].TextColor
        NotifyContent.TextSize = 14
        NotifyContent.Font = Enum.Font.SourceSans
        NotifyContent.TextXAlignment = Enum.TextXAlignment.Left
        NotifyContent.TextWrapped = true
        NotifyContent.Parent = Notification
        
        createTween(Notification, {Position = UDim2.new(1, -310, 1, -110)}, 0.3)
        task.wait(duration)
        createTween(Notification, {Position = UDim2.new(1, 0, 1, -110)}, 0.3)
        task.wait(0.3)
        Notification:Destroy()
    end
    
    -- Tab Creation
    function window:CreateTab(name, icon)
        local tab = {}
        
        -- Tab Button
        local TabButton = Instance.new("TextButton")
        TabButton.Size = UDim2.new(1, -10, 0, 30)
        TabButton.Position = UDim2.new(0, 5, 0, 0)
        TabButton.BackgroundColor3 = Themes[window.Config.Theme].ElementBackground
        TabButton.TextColor3 = Themes[window.Config.Theme].TextColor
        TabButton.Text = name
        TabButton.TextSize = 14
        TabButton.Font = Enum.Font.SourceSans
        TabButton.TextTransparency = 0.2
        TabButton.Parent = TabList
        
        -- Tab Page
        local TabPage = Instance.new("Frame")
        TabPage.Size = UDim2.new(1, 0, 1, 0)
        TabPage.BackgroundTransparency = 1
        TabPage.Parent = Elements
        TabPage.Name = name
        
        local PageScroll = Instance.new("ScrollingFrame")
        PageScroll.Size = UDim2.new(1, -10, 1, -10)
        PageScroll.Position = UDim2.new(0, 5, 0, 5)
        PageScroll.BackgroundTransparency = 1
        PageScroll.CanvasSize = UDim2.new(0, 0, 0, 0)
        PageScroll.ScrollBarThickness = 4
        PageScroll.Parent = TabPage
        
        local PageLayout = Instance.new("UIListLayout")
        PageLayout.SortOrder = Enum.SortOrder.LayoutOrder
        PageLayout.Padding = UDim.new(0, 10)
        PageLayout.Parent = PageScroll
        
        PageScroll.ChildAdded:Connect(function()
            PageScroll.CanvasSize = UDim2.new(0, 0, 0, PageLayout.AbsoluteContentSize.Y + 20)
        end)
        
        TabButton.MouseButton1Click:Connect(function()
            for _, page in ipairs(Elements:GetChildren()) do
                if page:IsA("Frame") then
                    page.Visible = page == TabPage
                end
            end
            PageLayout.Parent = Elements
            createTween(TabButton, {BackgroundColor3 = Themes[window.Config.Theme].Accent}, 0.3)
            createTween(TabButton, {TextTransparency = 0}, 0.3)
        end)
        
        -- Section Creation
        function tab:CreateSection(name)
            local Section = Instance.new("Frame")
            Section.Size = UDim2.new(1, 0, 0, 30)
            Section.BackgroundTransparency = 1
            Section.Parent = PageScroll
            
            local SectionTitle = Instance.new("TextLabel")
            SectionTitle.Size = UDim2.new(1, -20, 0, 20)
            SectionTitle.Position = UDim2.new(0, 10, 0, 5)
            SectionTitle.BackgroundTransparency = 1
            SectionTitle.Text = name
            SectionTitle.TextColor3 = Themes[window.Config.Theme].TextColor
            SectionTitle.TextSize = 16
            SectionTitle.Font = Enum.Font.SourceSansBold
            SectionTitle.TextXAlignment = Enum.TextXAlignment.Left
            SectionTitle.Parent = Section
        end
        
        -- Button Creation
        function tab:CreateButton(options)
            window.Analytics.ElementUsage["Button_" .. options.Name] = (window.Analytics.ElementUsage["Button_" .. options.Name] or 0) + 1
            
            local Button = Instance.new("TextButton")
            Button.Size = UDim2.new(1, -20, 0, 30)
            Button.Position = UDim2.new(0, 10, 0, 0)
            Button.BackgroundColor3 = Themes[window.Config.Theme].ElementBackground
            Button.TextColor3 = Themes[window.Config.Theme].TextColor
            Button.Text = options.Name
            Button.TextSize = 14
            Button.Font = Enum.Font.SourceSans
            Button.Parent = PageScroll
            
            Button.MouseButton1Click:Connect(function()
                options.Callback()
                window:Notify(options.Name, "Button clicked!", 3)
            end)
            
            createTween(Button, {BackgroundTransparency = 0}, 0.3)
        end
        
        -- Toggle Creation
        function tab:CreateToggle(options)
            window.Analytics.ElementUsage["Toggle_" .. options.Name] = (window.Analytics.ElementUsage["Toggle_" .. options.Name] or 0) + 1
            
            local Toggle = Instance.new("Frame")
            Toggle.Size = UDim2.new(1, -20, 0, 30)
            Toggle.BackgroundTransparency = 1
            Toggle.Parent = PageScroll
            
            local ToggleLabel = Instance.new("TextLabel")
            ToggleLabel.Size = UDim2.new(0, 200, 1, 0)
            ToggleLabel.BackgroundTransparency = 1
            ToggleLabel.Text = options.Name
            ToggleLabel.TextColor3 = Themes[window.Config.Theme].TextColor
            ToggleLabel.TextSize = 14
            ToggleLabel.Font = Enum.Font.SourceSans
            ToggleLabel.TextXAlignment = Enum.TextXAlignment.Left
            ToggleLabel.Parent = Toggle
            
            local ToggleButton = Instance.new("TextButton")
            ToggleButton.Size = UDim2.new(0, 20, 0, 20)
            ToggleButton.Position = UDim2.new(1, -30, 0, 5)
            ToggleButton.BackgroundColor3 = options.CurrentValue and Themes[window.Config.Theme].ToggleEnabled or Themes[window.Config.Theme].ToggleDisabled
            ToggleButton.Text = ""
            ToggleButton.Parent = Toggle
            
            ToggleButton.MouseButton1Click:Connect(function()
                options.CurrentValue = not options.CurrentValue
                createTween(ToggleButton, {BackgroundColor3 = options.CurrentValue and Themes[window.Config.Theme].ToggleEnabled or Themes[window.Config.Theme].ToggleDisabled}, 0.3)
                options.Callback(options.CurrentValue)
                window:Notify(options.Name, "Toggle set to " .. tostring(options.CurrentValue), 3)
            end)
        end
        
        -- Slider Creation
        function tab:CreateSlider(options)
            window.Analytics.ElementUsage["Slider_" .. options.Name] = (window.Analytics.ElementUsage["Slider_" .. options.Name] or 0) + 1
            
            local Slider = Instance.new("Frame")
            Slider.Size = UDim2.new(1, -20, 0, 50)
            Slider.BackgroundTransparency = 1
            Slider.Parent = PageScroll
            
            local SliderLabel = Instance.new("TextLabel")
            SliderLabel.Size = UDim2.new(0, 200, 0, 20)
            SliderLabel.BackgroundTransparency = 1
            SliderLabel.Text = options.Name
            SliderLabel.TextColor3 = Themes[window.Config.Theme].TextColor
            SliderLabel.TextSize = 14
            SliderLabel.Font = Enum.Font.SourceSans
            SliderLabel.TextXAlignment = Enum.TextXAlignment.Left
            SliderLabel.Parent = Slider
            
            local SliderBar = Instance.new("Frame")
            SliderBar.Size = UDim2.new(1, -20, 0, 10)
            SliderBar.Position = UDim2.new(0, 10, 0, 30)
            SliderBar.BackgroundColor3 = Themes[window.Config.Theme].ElementBackground
            SliderBar.Parent = Slider
            
            local SliderFill = Instance.new("Frame")
            SliderFill.Size = UDim2.new((options.CurrentValue - options.Range[1]) / (options.Range[2] - options.Range[1]), 0, 1, 0)
            SliderFill.BackgroundColor3 = Themes[window.Config.Theme].Accent
            SliderFill.Parent = SliderBar
            
            local SliderButton = Instance.new("TextButton")
            SliderButton.Size = UDim2.new(0, 20, 0, 20)
            SliderButton.Position = UDim2.new((options.CurrentValue - options.Range[1]) / (options.Range[2] - options.Range[1]), -10, 0, -5)
            SliderButton.BackgroundColor3 = Themes[window.Config.Theme].Accent
            SliderButton.Text = ""
            SliderButton.Parent = SliderBar
            
            local dragging = false
            SliderButton.MouseButton1Down:Connect(function()
                dragging = true
            end)
            
            UserInputService.InputEnded:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 then
                    dragging = false
                end
            end)
            
            RunService.RenderStepped:Connect(function()
                if dragging then
                    local mousePos = UserInputService:GetMouseLocation()
                    local relativeX = (mousePos.X - SliderBar.AbsolutePosition.X) / SliderBar.AbsoluteSize.X
                    relativeX = math.clamp(relativeX, 0, 1)
                    local value = options.Range[1] + (relativeX * (options.Range[2] - options.Range[1]))
                    value = math.floor(value / options.Increment + 0.5) * options.Increment
                    options.CurrentValue = value
                    SliderFill.Size = UDim2.new(relativeX, 0, 1, 0)
                    SliderButton.Position = UDim2.new(relativeX, -10, 0, -5)
                    options.Callback(value)
                end
            end)
        end
        
        return tab
    end
    
    return window
end
